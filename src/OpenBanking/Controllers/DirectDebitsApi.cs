/*
 * Consumer Data Standards
 *
 * API sets created by the Australian Consumer Data Standards to meet the needs of the Consumer Data Right
 *
 * OpenAPI spec version: 1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.WebUtilities;
using Microsoft.Extensions.Logging;
using Microsoft.Extensions.Primitives;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using OpenBanking.Attributes;
using OpenBanking.Models;

namespace OpenBanking.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    public class DirectDebitsApiController : Controller
    { 
        /// <summary>
        /// Get Direct Debits For Account
        /// </summary>
        /// <remarks>Obtain direct debit authorisations for a specific account</remarks>
        /// <param name="accountId">ID of the account to get direct debit authorisations for.  Must have previously been returned by one of the account list end points.</param>
        /// <param name="page">Page of results to request (standard pagination)</param>
        /// <param name="pageSize">Page size to request. Default is 25 (standard pagination)</param>
        /// <response code="200">Success</response>
        [HttpGet]
        [Route("/cds-au/v1/banking/accounts/{accountId}/direct-debits")]
        [ValidateModelState]
        [SwaggerOperation("ListDirectDebits")]
        [SwaggerResponse(statusCode: 200, type: typeof(ResponseBankingDirectDebits), description: "Success")]
        public virtual IActionResult ListDirectDebits([FromRoute][Required]string accountId, [FromQuery]int? page, [FromQuery]int? pageSize)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ResponseBankingDirectDebits));

            string exampleJson = null;
            exampleJson = "{\r\n  \"data\" : {\r\n    \"directDebitAuthorisations\" : [ {\r\n      \"lastDebitAmount\" : \"lastDebitAmount\",\r\n      \"accountId\" : \"accountId\",\r\n      \"lastDebitDateTime\" : \"lastDebitDateTime\",\r\n      \"authorisedEntity\" : {\r\n        \"arbn\" : \"arbn\",\r\n        \"name\" : \"name\",\r\n        \"financialInstitution\" : \"financialInstitution\",\r\n        \"abn\" : \"abn\",\r\n        \"acn\" : \"acn\"\r\n      }\r\n    }, {\r\n      \"lastDebitAmount\" : \"lastDebitAmount\",\r\n      \"accountId\" : \"accountId\",\r\n      \"lastDebitDateTime\" : \"lastDebitDateTime\",\r\n      \"authorisedEntity\" : {\r\n        \"arbn\" : \"arbn\",\r\n        \"name\" : \"name\",\r\n        \"financialInstitution\" : \"financialInstitution\",\r\n        \"abn\" : \"abn\",\r\n        \"acn\" : \"acn\"\r\n      }\r\n    } ]\r\n  },\r\n  \"meta\" : {\r\n    \"totalRecords\" : 0,\r\n    \"totalPages\" : 6\r\n  },\r\n  \"links\" : {\r\n    \"next\" : \"next\",\r\n    \"last\" : \"last\",\r\n    \"prev\" : \"prev\",\r\n    \"self\" : \"self\",\r\n    \"first\" : \"first\"\r\n  }\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ResponseBankingDirectDebits>(exampleJson)
            : default(ResponseBankingDirectDebits);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get Bulk Direct Debits
        /// </summary>
        /// <remarks>Obtain direct debit authorisations for multiple, filtered accounts</remarks>
        /// <param name="isOwned">Filters accounts based on whether they are owned by the authorised customer</param>
        /// <param name="productCategory">Used to filter results on the productCategory field applicable to accounts. Any one of the valid values for this field can be supplied. If absent then all accounts returned.</param>
        /// <param name="page">Page of results to request (standard pagination)</param>
        /// <param name="pageSize">Page size to request. Default is 25 (standard pagination)</param>
        /// <response code="200">Success</response>
        [HttpGet]
        [Route("/cds-au/v1/banking/accounts/direct-debits")]
        [ValidateModelState]
        [SwaggerOperation("ListDirectDebitsBulk")]
        [SwaggerResponse(statusCode: 200, type: typeof(ResponseBankingDirectDebits), description: "Success")]
        public virtual IActionResult ListDirectDebitsBulk([FromQuery]string isOwned, [FromQuery]string productCategory, [FromQuery]int? page, [FromQuery]int? pageSize)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ResponseBankingDirectDebits));

            string exampleJson = null;
            exampleJson = "{\r\n  \"data\" : {\r\n    \"directDebitAuthorisations\" : [ {\r\n      \"lastDebitAmount\" : \"lastDebitAmount\",\r\n      \"accountId\" : \"accountId\",\r\n      \"lastDebitDateTime\" : \"lastDebitDateTime\",\r\n      \"authorisedEntity\" : {\r\n        \"arbn\" : \"arbn\",\r\n        \"name\" : \"name\",\r\n        \"financialInstitution\" : \"financialInstitution\",\r\n        \"abn\" : \"abn\",\r\n        \"acn\" : \"acn\"\r\n      }\r\n    }, {\r\n      \"lastDebitAmount\" : \"lastDebitAmount\",\r\n      \"accountId\" : \"accountId\",\r\n      \"lastDebitDateTime\" : \"lastDebitDateTime\",\r\n      \"authorisedEntity\" : {\r\n        \"arbn\" : \"arbn\",\r\n        \"name\" : \"name\",\r\n        \"financialInstitution\" : \"financialInstitution\",\r\n        \"abn\" : \"abn\",\r\n        \"acn\" : \"acn\"\r\n      }\r\n    } ]\r\n  },\r\n  \"meta\" : {\r\n    \"totalRecords\" : 0,\r\n    \"totalPages\" : 6\r\n  },\r\n  \"links\" : {\r\n    \"next\" : \"next\",\r\n    \"last\" : \"last\",\r\n    \"prev\" : \"prev\",\r\n    \"self\" : \"self\",\r\n    \"first\" : \"first\"\r\n  }\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ResponseBankingDirectDebits>(exampleJson)
            : default(ResponseBankingDirectDebits);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Get Direct Debits For Specific Accounts
        /// </summary>
        /// <remarks>Obtain direct debit authorisations for a specified list of accounts</remarks>
        /// <param name="accountIds">The list of account IDs to obtain information for</param>
        /// <response code="200">Success</response>
        /// <response code="422">The request was well formed but was unable to be processed due to business logic specific to the request</response>
        [HttpPost]
        [Route("/cds-au/v1/banking/accounts/direct-debits")]
        [ValidateModelState]
        [SwaggerOperation("ListDirectDebitsSpecificAccounts")]
        [SwaggerResponse(statusCode: 200, type: typeof(ResponseBankingDirectDebits), description: "Success")]
        [SwaggerResponse(statusCode: 422, type: typeof(ErrorList), description: "The request was well formed but was unable to be processed due to business logic specific to the request")]
        public virtual IActionResult ListDirectDebitsSpecificAccounts([FromBody]RequestAccountIds accountIds)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ResponseBankingDirectDebits));

            //TODO: Uncomment the next line to return response 422 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(422, default(ErrorList));

            string exampleJson = null;
            exampleJson = "{\r\n  \"data\" : {\r\n    \"directDebitAuthorisations\" : [ {\r\n      \"lastDebitAmount\" : \"lastDebitAmount\",\r\n      \"accountId\" : \"accountId\",\r\n      \"lastDebitDateTime\" : \"lastDebitDateTime\",\r\n      \"authorisedEntity\" : {\r\n        \"arbn\" : \"arbn\",\r\n        \"name\" : \"name\",\r\n        \"financialInstitution\" : \"financialInstitution\",\r\n        \"abn\" : \"abn\",\r\n        \"acn\" : \"acn\"\r\n      }\r\n    }, {\r\n      \"lastDebitAmount\" : \"lastDebitAmount\",\r\n      \"accountId\" : \"accountId\",\r\n      \"lastDebitDateTime\" : \"lastDebitDateTime\",\r\n      \"authorisedEntity\" : {\r\n        \"arbn\" : \"arbn\",\r\n        \"name\" : \"name\",\r\n        \"financialInstitution\" : \"financialInstitution\",\r\n        \"abn\" : \"abn\",\r\n        \"acn\" : \"acn\"\r\n      }\r\n    } ]\r\n  },\r\n  \"meta\" : {\r\n    \"totalRecords\" : 0,\r\n    \"totalPages\" : 6\r\n  },\r\n  \"links\" : {\r\n    \"next\" : \"next\",\r\n    \"last\" : \"last\",\r\n    \"prev\" : \"prev\",\r\n    \"self\" : \"self\",\r\n    \"first\" : \"first\"\r\n  }\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ResponseBankingDirectDebits>(exampleJson)
            : default(ResponseBankingDirectDebits);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
